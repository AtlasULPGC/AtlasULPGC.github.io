{"version":3,"sources":["../../../../ami/examples/viewers_upload/events.js"],"names":["hookCallbacks","stackHelper","controls","camera","ctrlDown","drag","start","x","y","stack","_stack","addEventListener","e","delta","index","orientationMaxIndex","onWindowResize","threeD","document","getElementById","canvas","width","clientWidth","height","clientHeight","fitBox","renderer","setSize","slice","canvasWidth","canvasHeight","window","onWindowKeyPressed","event","ctrlKey","onMouseMove","clientX","clientY","threshold","intensityAuto","dynamicRange","minMax","Math","abs","windowWidth","windowCenter"],"mappings":"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","file":"events.js","sourcesContent":["/**\r\n * Connect all callbevent observesrs\r\n */\r\nfunction hookCallbacks(stackHelper, controls, camera) {\r\n\r\n    let ctrlDown = false;\r\n    let drag = {\r\n        start: {\r\n            x: null,\r\n            y: null,\r\n        },\r\n    };\r\n\r\n    let stack = stackHelper._stack;\r\n    // hook up callbacks\r\n    controls.addEventListener('OnScroll', function (e) {\r\n        if (e.delta > 0) {\r\n            if (stackHelper.index >= stackHelper.orientationMaxIndex - 1) {\r\n                return false;\r\n            }\r\n            stackHelper.index += 1;\r\n        } else {\r\n            if (stackHelper.index <= 0) {\r\n                return false;\r\n            }\r\n            stackHelper.index -= 1;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * On window resize callback\r\n     */\r\n    function onWindowResize() {\r\n        let threeD = document.getElementById('r3d');\r\n        camera.canvas = {\r\n            width: threeD.clientWidth,\r\n            height: threeD.clientHeight,\r\n        };\r\n        camera.fitBox(2);\r\n\r\n        renderer.setSize(threeD.clientWidth, threeD.clientHeight);\r\n\r\n        // update info to draw borders properly\r\n        stackHelper.slice.canvasWidth = threeD.clientWidth;\r\n        stackHelper.slice.canvasHeight = threeD.clientHeight;\r\n    }\r\n\r\n    window.addEventListener('resize', onWindowResize, false);\r\n    onWindowResize();\r\n\r\n    /**\r\n     * On key pressed callback\r\n     */\r\n    function onWindowKeyPressed(event) {\r\n        ctrlDown = event.ctrlKey;\r\n        if (!ctrlDown) {\r\n            drag.start.x = null;\r\n            drag.start.y = null;\r\n        }\r\n    }\r\n\r\n    document.addEventListener('keydown', onWindowKeyPressed, false);\r\n    document.addEventListener('keyup', onWindowKeyPressed, false);\r\n\r\n    /**\r\n     * On mouse move callback\r\n     */\r\n    function onMouseMove(event) {\r\n        if (ctrlDown) {\r\n            if (drag.start.x === null) {\r\n                drag.start.x = event.clientX;\r\n                drag.start.y = event.clientY;\r\n            }\r\n            let threshold = 15;\r\n\r\n            stackHelper.slice.intensityAuto = false;\r\n\r\n            let dynamicRange = stack.minMax[1] - stack.minMax[0];\r\n            dynamicRange /= threeD.clientWidth;\r\n\r\n            if (Math.abs(event.clientX - drag.start.x) > threshold) {\r\n                // window width\r\n                stackHelper.slice.windowWidth +=\r\n                    dynamicRange * (event.clientX - drag.start.x);\r\n                drag.start.x = event.clientX;\r\n            }\r\n\r\n            if (Math.abs(event.clientY - drag.start.y) > threshold) {\r\n                // window center\r\n                stackHelper.slice.windowCenter -=\r\n                    dynamicRange * (event.clientY - drag.start.y);\r\n                drag.start.y = event.clientY;\r\n            }\r\n        }\r\n    }\r\n\r\n    document.addEventListener('mousemove', onMouseMove);\r\n}"]}