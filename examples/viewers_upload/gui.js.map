{"version":3,"sources":["../../../../ami/examples/viewers_upload/gui.js"],"names":["buildGUI","stackHelper","lut","camUtils","camera","stack","_stack","gui","dat","GUI","autoPlace","customContainer","document","getElementById","appendChild","domElement","stackFolder","addFolder","minWidth","maxWidth","minMax","add","slice","step","listen","minCenter","maxCenter","domTarget","predefinedLut","modeToCalculateLut","color","opacity","luts","presetLuts","lutUpdate","lutsAvailable","onChange","value","lutTexture","texture","lutDiscrete","discrete","minIndex","maxIndex","dimensionsIJK","z","index","open","cameraFolder","invertRows","updateLabels","directionsLabel","modality","invertColumns","angle","rotate","orientationUpdate","orientation","update","fitBox","stackOrientation","__max","orientationMaxIndex","initialSliderIsAtHalf","Math","floor","conventionUpdate","convention"],"mappings":"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","file":"gui.js","sourcesContent":["import HelpersLut from 'base/helpers/helpers.lut';\r\n\r\nexport default function buildGUI(stackHelper, lut, camUtils, camera) {\r\n    let stack = stackHelper._stack;\r\n\r\n    let gui = new dat.GUI({\r\n        autoPlace: false,\r\n    });\r\n\r\n    let customContainer = document.getElementById('my-gui-container');\r\n    customContainer.appendChild(gui.domElement);\r\n\r\n    let stackFolder = gui.addFolder('Stack');\r\n    const minWidth = 1;\r\n    const maxWidth = stack.minMax[1] - stack.minMax[0];\r\n    stackFolder.add(\r\n        stackHelper.slice, 'windowWidth', minWidth, maxWidth)\r\n        .step(1).listen();\r\n    const minCenter = stack.minMax[0];\r\n    const maxCenter = stack.minMax[1];\r\n    stackFolder.add(\r\n        stackHelper.slice, 'windowCenter', minCenter, maxCenter)\r\n        .step(1).listen();\r\n    stackFolder.add(stackHelper.slice, 'intensityAuto').listen();\r\n    stackFolder.add(stackHelper.slice, 'invert');\r\n    stackFolder.add(stackHelper.slice, 'interpolation', 0, 1).step(1).listen();\r\n\r\n    // CREATE LUT\r\n    const domTarget = 'my-lut-canvases';\r\n    const predefinedLut = 'default';\r\n    const modeToCalculateLut = 'linear';\r\n    const color = [[0, 0, 0, 0], [1, 1, 1, 1]];\r\n    const opacity = [[0, 1], [1, 1]];\r\n    lut = new HelpersLut(\r\n        domTarget,\r\n        predefinedLut,\r\n        modeToCalculateLut,\r\n        color,\r\n        opacity);\r\n    lut.luts = HelpersLut.presetLuts();\r\n\r\n    let lutUpdate = stackFolder.add(\r\n        stackHelper.slice, 'lut', lut.lutsAvailable());\r\n    lutUpdate.onChange(function (value) {\r\n        lut.lut = value;\r\n        stackHelper.slice.lutTexture = lut.texture;\r\n    });\r\n    let lutDiscrete = stackFolder.add(lut, 'discrete', false);\r\n    lutDiscrete.onChange(function (value) {\r\n        lut.discrete = value;\r\n        stackHelper.slice.lutTexture = lut.texture;\r\n    });\r\n\r\n    const minIndex = 0;\r\n    const maxIndex = stack.dimensionsIJK.z - 1;\r\n    let index = stackFolder.add(\r\n        stackHelper, 'index', minIndex, maxIndex).step(1).listen();\r\n    stackFolder.open();\r\n\r\n    // camera\r\n    let cameraFolder = gui.addFolder('Camera');\r\n    let invertRows = cameraFolder.add(camUtils, 'invertRows');\r\n    invertRows.onChange(function () {\r\n        camera.invertRows();\r\n        updateLabels(camera.directionsLabel, stack.modality);\r\n    });\r\n\r\n    let invertColumns = cameraFolder.add(camUtils, 'invertColumns');\r\n    invertColumns.onChange(function () {\r\n        camera.invertColumns();\r\n        updateLabels(camera.directionsLabel, stack.modality);\r\n    });\r\n\r\n    let angle = cameraFolder.add(camera, 'angle', 0, 360).step(1).listen();\r\n    angle.onChange(function () {\r\n        updateLabels(camera.directionsLabel, stack.modality);\r\n    });\r\n\r\n    let rotate = cameraFolder.add(camUtils, 'rotate');\r\n    rotate.onChange(function () {\r\n        camera.rotate();\r\n        updateLabels(camera.directionsLabel, stack.modality);\r\n    });\r\n\r\n    let orientationUpdate = cameraFolder.add(\r\n        camUtils, 'orientation', ['default', 'axial', 'coronal', 'sagittal']);\r\n    orientationUpdate.onChange(function (value) {\r\n        camera.orientation = value;\r\n        camera.update();\r\n        camera.fitBox(2);\r\n        stackHelper.orientation = camera.stackOrientation;\r\n        updateLabels(camera.directionsLabel, stack.modality);\r\n\r\n        index.__max = stackHelper.orientationMaxIndex;\r\n        const initialSliderIsAtHalf = Math.floor(index.__max / 2);\r\n        stackHelper.index = initialSliderIsAtHalf;\r\n    });\r\n\r\n    let conventionUpdate = cameraFolder.add(\r\n        camUtils, 'convention', ['radio', 'neuro']);\r\n    conventionUpdate.onChange(function (value) {\r\n        camera.convention = value;\r\n        camera.update();\r\n        camera.fitBox(2);\r\n        updateLabels(camera.directionsLabel, stack.modality);\r\n    });\r\n}"]}